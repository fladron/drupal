<?php
variable_set('site_id', 'SITEID');

/**
 * Implements hook_menu().
 */
function omitsis_SITEID_menu() {
  $items = array();

  /*$items['oasync/user/uid'] = array(
    'page callback' => 'omitsis_SITEID_get_user_uid',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );*/

  return $items;
}

/**
 *  Implementation of hook_page_alter().
 */
function omitsis_SITEID_page_alter(&$page) {

}

/**
 *  Implementation of hook_form_validate().
 */
function omitsis_SITEID_form_validate($form, &$form_state) {

}

/**
 *  Implementation of hook_form_alter().
 */
function omitsis_SITEID_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'comment_form':
      $form['comment_body']['#after_build'][] = '_remove_format';
      //$form['#action'] = base_path() . drupal_get_path_alias('node/' . $form['#node']->nid);
      //unset($form['author']['_author']);
      break;
  }
}

/**
 * Implements hook_node_presave().
 */
function omitsis_SITEID_node_presave($node) {
  /*switch ($node->type) {
  	case 'article':

      break;
  }*/
}

/**
 * Implements hook_node_insert().
 */
function omitsis_SITEID_node_insert($node) {
  /*switch ($node->type) {
  	case 'article':

     	break;
  }*/
}

/**
 * Implements hook_block_info().
 */
/*function omitsis_SITEID_block_info() {
  $blocks['BLOCK_ID'] = array(
    'info'=> variable_get('site_id') . ': BLOCK TITLE',
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}*/

/**
 * Implements hook_block_view().
 *
 * Prepares the contents of the block.
 */
function omitsis_SITEID_block_view($delta = '') {
  $block = array();
  switch($delta){
    /*case 'SOME_BLOCK':
      $block['subject'] = '';
      $block['content'] = omitsis_SITEID_render_SOME_BLOCK();
      break;*/
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function omitsis_SITEID_theme($existing, $type, $theme, $path) {
  return array(
    /*'SOME_THEME' => array(
      'variables' => array(),
      'template' => 'theme/SOME_THEME',
    ),*/
  );
}

/**
 *  Implements hook_menu_local_tasks_alter().
 */
function omitsis_SITEID_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  /*$my_profile_link = array(
  	'href' => 'user',
    'title' => t("My profile"),
    'localized_options' => array('attributes' => array('data-action' => 'my-profile')),
  );

  switch ($root_path) {
    case 'messages':
      $data['actions']['output'][0]['#link']['localized_options'] = array('attributes' => array('data-action' => 'add-message'));
      // my profile link
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $my_profile_link,
      );
      // all messages link
      array_unshift($data['actions']['output'], array( // we use array_unshift and not push, in order to put this link at the beggining
        '#theme' => 'menu_local_action',
        '#link' => $all_messages_link,
      ));
      break;
  }*/
}

/**
 * Gets youtube video id.
 */
function omitsis_SITEID_video_url_id($video_url) {
  $parsed_url = parse_url($video_url);
  $page_url = $parsed_url['path'];
  $video_id = substr($page_url , 1 , strlen($page_url) - 1);
  return $video_id;
}

/**
 * Gets thumbnail image for video.
 */
function omitsis_SITEID_video_url_thumbnail($video_url) {
  $video_thumbnail = 'http://img.youtube.com/vi/' . omitsis_SITEID_video_url_id($video_url) . '/0.jpg';
  return $video_thumbnail;
}

/**
 * Converts video share url from youtube to current embed needs.
 */
function omitsis_SITEID_video_url_templating($video_url) {
  // we get: 'http://youtu.be/yaJ3qpaAjG0?t=2m13s'
  // we can also get: http://www.youtube.com/watch?v=BRVjP9wMz00&feature=share&t=12s
  // and we need: '/yaJ3qpaAjG0?start=133'
  $parsed_url = parse_url($video_url);
  $page_url = $parsed_url['path']; // '/yaJ3qpaAjG0'
  if(isset($parsed_url['query'])) {
    parse_str($parsed_url['query'], $query); // 't=2m13s'
  }
  if ($page_url == '/watch') {
    $page_url = '/' . $query['v'];
  }
  /* Convert minuntes/seconds format, to only seconds */
  if (isset($query['t'])) {
    $min = explode('m', $query['t']);
    if (count($min) == 1) {     // no minutes
      $sec = explode('s', $min[0]);
      $sec = $sec[0];
      $min = 0;
    } else {                    // Minutes and seconds
      $sec = explode('s', $min[1]);
      $min = $min[0] * 60;
      $sec = $sec[0];
    }
    $start_time = $min + $sec;
    $page_url .= '?start=' . $start_time;
  }
  return $page_url;
}



function omitsis_SITEID_get_taxonomy_root_parent($tid) {
  $parentsArr = taxonomy_get_parents_all($tid);
  if (!count($parentsArr)) {
    return null;
  }

  return $parentsArr[count($parentsArr) - 1];
}

/**
 * Get user uid for async js calls
 */
/*function omitsis_SITEID_get_user_uid(){
  $response = intval($GLOBALS['user']->uid);
  drupal_json_output($response);
  drupal_exit();
}*/

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function omitsis_SITEID_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'ckeditor') {
    // Using ckeditor, set custom config file.
    $settings['customConfig'] = base_path() . drupal_get_path('module', 'omitsis_SITEID') . '/js/omitsis_SITEID_ckeditor_config.js';
  }
}

/**
 * True if translation exists.
 */
/*function omitsis_SITEID_check_translation_available($nid) {
  $lang = oh_get_lang_code();
  $query_str = "
    SELECT node.nid AS nid
    FROM node node
    INNER JOIN entity_translation entity_translation_node ON node.nid = entity_translation_node.entity_id AND (entity_translation_node.entity_type = 'node')
    WHERE node.status = '1' AND entity_translation_node.language = :lang AND node.nid = :nid";
    $query = db_query($query_str, array(':lang' => $lang, ':nid' => $nid));
  if ($query->rowCount() != 0) {
    return true;
  }
  drupal_set_message(t("Sorry but this content its not available in your language"), 'warning', false);
  drupal_goto('<front>');
  return false;
}*/

function _remove_format(&$form){
  unset($form[LANGUAGE_NONE][0]['format']['format']);
  unset($form[LANGUAGE_NONE][0]['format']['guidelines']);
  unset($form[LANGUAGE_NONE][0]['format']['help']);
  return $form;
}
